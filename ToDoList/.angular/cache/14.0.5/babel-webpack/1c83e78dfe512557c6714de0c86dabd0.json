{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport * as i3 from '@angular/fire/app-check';\nimport firebase from 'firebase/compat/app';\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isFirebaseDataSnapshot(value) {\n  return typeof value.exportVal === 'function';\n}\n\nfunction isNil(obj) {\n  return obj === undefined || obj === null;\n}\n\nfunction isFirebaseRef(value) {\n  return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\n\n\nfunction getRef(database, pathRef) {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef : database.ref(pathRef);\n}\n\nfunction checkOperationCases(item, cases) {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\n\n\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let fn = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({\n          snapshot,\n          prevKey\n        });\n      });\n\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n\n      };\n    } else {\n      return {\n        unsubscribe() {}\n\n      };\n    }\n  }).pipe(map(payload => {\n    const {\n      snapshot,\n      prevKey\n    } = payload;\n    let key = null;\n\n    if (snapshot.exists()) {\n      key = snapshot.key;\n    }\n\n    return {\n      type: event,\n      payload: snapshot,\n      prevKey,\n      key\n    };\n  }), share());\n}\n\nfunction listChanges(ref, events, scheduler) {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n    const childEvent$ = [of(snapshotAction)];\n    events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n    return merge(...childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n\nfunction positionFor(changes, key) {\n  const len = changes.length;\n\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const {\n    payload,\n    prevKey,\n    key\n  } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {\n            payload,\n            type: 'value',\n            prevKey,\n            key: payload.key\n          };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n\n      return current;\n\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n\n      return current;\n\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n    // default will also remove null results\n\n    default:\n      return current;\n  }\n}\n\nfunction validateEventsArray(events) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n\n  return events;\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  return listChanges(query, events, scheduler);\n}\n\nfunction stateChanges(query, events, scheduler) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n  const auditTrail$ = stateChanges(query, events).pipe(scan((current, action) => [...current, action], []));\n  return waitForLoaded(query, auditTrail$, scheduler);\n}\n\nfunction loadedData(query, scheduler) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, 'value', 'on', scheduler).pipe(map(data => {\n    // Store the last key in the data set\n    let lastKeyToLoad; // Loop through loaded dataset to find the last key\n\n    data.payload.forEach(child => {\n      lastKeyToLoad = child.key;\n      return false;\n    }); // return data set and the current last key loaded\n\n    return {\n      data,\n      lastKeyToLoad\n    };\n  }));\n}\n\nfunction waitForLoaded(query, action$, scheduler) {\n  const loaded$ = loadedData(query, scheduler);\n  return loaded$.pipe(withLatestFrom(action$), // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(([loaded, actions]) => {\n    // Store the last key in the data set\n    const lastKeyToLoad = loaded.lastKeyToLoad; // Store all child keys loaded at this point\n\n    const loadedKeys = actions.map(snap => snap.key);\n    return {\n      actions,\n      lastKeyToLoad,\n      loadedKeys\n    };\n  }), // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n  return function dataOperation(item, value) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item)[operation](value),\n      firebaseCase: () => item[operation](value),\n      snapshotCase: () => item.ref[operation](value)\n    });\n  };\n} // TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\n\n\nfunction createRemoveMethod(ref) {\n  return function remove(item) {\n    if (!item) {\n      return ref.remove();\n    }\n\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item).remove(),\n      firebaseCase: () => item.remove(),\n      snapshotCase: () => item.ref.remove()\n    });\n  };\n}\n\nfunction createListReference(query, afDatabase) {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod(refInZone, 'update'),\n    set: createDataOperationMethod(refInZone, 'set'),\n    push: data => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n\n    snapshotChanges(events) {\n      return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n\n    stateChanges(events) {\n      return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n\n    auditTrail(events) {\n      return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n    },\n\n    valueChanges(events, options) {\n      const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(map(actions => actions.map(a => {\n        if (options && options.idField) {\n          return Object.assign(Object.assign({}, a.payload.val()), {\n            [options.idField]: a.key\n          });\n        } else {\n          return a.payload.val();\n        }\n      })), keepUnstableUntilFirst);\n    }\n\n  };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n  return function snapshotChanges() {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n\nfunction createObjectReference(query, afDatabase) {\n  return {\n    query,\n\n    snapshotChanges() {\n      return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n    },\n\n    update(data) {\n      return query.ref.update(data);\n    },\n\n    set(data) {\n      return query.ref.set(data);\n    },\n\n    remove() {\n      return query.ref.remove();\n    },\n\n    valueChanges() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n    }\n\n  };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\n\nclass AngularFireDatabase {\n  constructor(options, name, databaseURL, // tslint:disable-next-line:ban-types\n  platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n  auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    this.schedulers = schedulers;\n    const useEmulator = _useEmulator;\n    const app = ɵfirebaseAppFactory(options, zone, name);\n\n    if (auth) {\n      ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n\n    this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n\n      return database;\n    }, [useEmulator]);\n  }\n\n  list(pathOrRef, queryFn) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query = ref;\n\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n\n    return createListReference(query, this);\n  }\n\n  object(pathOrRef) {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference(ref, this);\n  }\n\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n\n}\n\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) {\n  return new (t || AngularFireDatabase)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(URL, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n};\n\nAngularFireDatabase.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularFireDatabase,\n  factory: AngularFireDatabase.ɵfac,\n  providedIn: 'any'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FIREBASE_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [FIREBASE_APP_NAME]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [URL]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.ɵAngularFireSchedulers\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR]\n      }]\n    }, {\n      type: i2.AngularFireAuth,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_EMULATOR$1]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SETTINGS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TENANT_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LANGUAGE_CODE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [USE_DEVICE_LANGUAGE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [PERSISTENCE]\n      }]\n    }, {\n      type: i3.AppCheckInstances,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nclass AngularFireDatabaseModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n  }\n\n}\n\nAngularFireDatabaseModule.ɵfac = function AngularFireDatabaseModule_Factory(t) {\n  return new (t || AngularFireDatabaseModule)();\n};\n\nAngularFireDatabaseModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularFireDatabaseModule\n});\nAngularFireDatabaseModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularFireDatabase]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFireDatabase]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };","map":{"version":3,"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","NgModule","asyncScheduler","Observable","of","merge","map","share","switchMap","scan","distinctUntilChanged","withLatestFrom","skipWhile","i1","keepUnstableUntilFirst","VERSION","ɵfirebaseAppFactory","ɵcacheInstance","FIREBASE_OPTIONS","FIREBASE_APP_NAME","i2","ɵauthFactory","USE_EMULATOR","USE_EMULATOR$1","SETTINGS","TENANT_ID","LANGUAGE_CODE","USE_DEVICE_LANGUAGE","PERSISTENCE","i3","firebase","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","undefined","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","fromRef","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","pipe","payload","key","exists","type","listChanges","events","snapshotAction","childEvent$","forEach","push","buildView","positionFor","changes","len","length","i","positionAfter","current","action","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","refInZone","ngZone","run","update","valueChanges","options","snapshotChanges$","a","idField","Object","assign","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","constructor","name","databaseURL","platformId","zone","_useEmulator","auth","useAuthEmulator","authSettings","tenantId","languageCode","useDeviceLanguage","persistence","_appCheckInstances","useEmulator","app","runOutsideAngular","list","pathOrRef","queryFn","object","createPushId","ɵfac","NgZone","ɵAngularFireSchedulers","AngularFireAuth","AppCheckInstances","ɵprov","args","providedIn","decorators","AngularFireDatabaseModule","registerVersion","full","ɵmod","ɵinj","providers"],"sources":["C:/laragon/www/appli-ionic/ToDoList/node_modules/@angular/fire/fesm2015/angular-fire-compat-database.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport { ɵfirebaseAppFactory, ɵcacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport * as i3 from '@angular/fire/app-check';\nimport firebase from 'firebase/compat/app';\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable(subscriber => {\n        let fn = null;\n        fn = ref[listenType](event, (snapshot, prevKey) => {\n            scheduler.schedule(() => {\n                subscriber.next({ snapshot, prevKey });\n            });\n            if (listenType === 'once') {\n                scheduler.schedule(() => subscriber.complete());\n            }\n        }, err => {\n            scheduler.schedule(() => subscriber.error(err));\n        });\n        if (listenType === 'on') {\n            return {\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return {\n                unsubscribe() {\n                }\n            };\n        }\n    }).pipe(map(payload => {\n        const { snapshot, prevKey } = payload;\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    }), share());\n}\n\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap(snapshotAction => {\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) !== prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\nfunction validateEventsArray(events) {\n    if (isNil(events) || events.length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, events, scheduler);\n}\n\nfunction stateChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    const childEvent$ = events.map(event => fromRef(query, event, 'on', scheduler));\n    return merge(...childEvent$);\n}\n\nfunction auditTrail(query, events, scheduler) {\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((current, action) => [...current, action], []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map(data => {\n        // Store the last key in the data set\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach(child => {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, action$, scheduler) {\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(meta => meta.actions));\n}\n\nfunction createDataOperationMethod(ref, operation) {\n    return function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item)[operation](value),\n            firebaseCase: () => item[operation](value),\n            snapshotCase: () => item.ref[operation](value)\n        });\n    };\n}\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nfunction createRemoveMethod(ref) {\n    return function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: () => ref.child(item).remove(),\n            firebaseCase: () => item.remove(),\n            snapshotCase: () => item.ref.remove()\n        });\n    };\n}\n\nfunction createListReference(query, afDatabase) {\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n    return {\n        query,\n        update: createDataOperationMethod(refInZone, 'update'),\n        set: createDataOperationMethod(refInZone, 'set'),\n        push: (data) => refInZone.push(data),\n        remove: createRemoveMethod(refInZone),\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(keepUnstableUntilFirst);\n        },\n        valueChanges(events, options) {\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map(actions => actions.map(a => {\n                if (options && options.idField) {\n                    return Object.assign(Object.assign({}, a.payload.val()), {\n                        [options.idField]: a.key\n                    });\n                }\n                else {\n                    return a.payload.val();\n                }\n            })), keepUnstableUntilFirst);\n        }\n    };\n}\n\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    };\n}\n\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe(keepUnstableUntilFirst);\n        },\n        update(data) { return query.ref.update(data); },\n        set(data) { return query.ref.set(data); },\n        remove() { return query.ref.remove(); },\n        valueChanges() {\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(keepUnstableUntilFirst, map(action => action.payload.exists() ? action.payload.val() : null));\n        },\n    };\n}\n\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nconst USE_EMULATOR = new InjectionToken('angularfire2.database.use-emulator');\nclass AngularFireDatabase {\n    constructor(options, name, databaseURL, \n    // tslint:disable-next-line:ban-types\n    platformId, zone, schedulers, _useEmulator, // tuple isn't working here\n    auth, useAuthEmulator, authSettings, // can't use firebase.auth.AuthSettings here\n    tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n        this.schedulers = schedulers;\n        const useEmulator = _useEmulator;\n        const app = ɵfirebaseAppFactory(options, zone, name);\n        if (auth) {\n            ɵauthFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n        }\n        this.database = ɵcacheInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app.name, () => {\n            const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n            if (useEmulator) {\n                database.useEmulator(...useEmulator);\n            }\n            return database;\n        }, [useEmulator]);\n    }\n    list(pathOrRef, queryFn) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    object(pathOrRef) {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n        return createObjectReference(ref, this);\n    }\n    createPushId() {\n        const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n        return ref.push().key;\n    }\n}\nAngularFireDatabase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, deps: [{ token: FIREBASE_OPTIONS }, { token: FIREBASE_APP_NAME, optional: true }, { token: URL, optional: true }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i1.ɵAngularFireSchedulers }, { token: USE_EMULATOR, optional: true }, { token: i2.AngularFireAuth, optional: true }, { token: USE_EMULATOR$1, optional: true }, { token: SETTINGS, optional: true }, { token: TENANT_ID, optional: true }, { token: LANGUAGE_CODE, optional: true }, { token: USE_DEVICE_LANGUAGE, optional: true }, { token: PERSISTENCE, optional: true }, { token: i3.AppCheckInstances, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nAngularFireDatabase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, providedIn: 'any' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabase, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'any'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FIREBASE_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FIREBASE_APP_NAME]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [URL]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i1.ɵAngularFireSchedulers }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR]\n                }] }, { type: i2.AngularFireAuth, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_EMULATOR$1]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SETTINGS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TENANT_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LANGUAGE_CODE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [USE_DEVICE_LANGUAGE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [PERSISTENCE]\n                }] }, { type: i3.AppCheckInstances, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nclass AngularFireDatabaseModule {\n    constructor() {\n        firebase.registerVersion('angularfire', VERSION.full, 'rtdb-compat');\n    }\n}\nAngularFireDatabaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularFireDatabaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule });\nAngularFireDatabaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, providers: [AngularFireDatabase] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: AngularFireDatabaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [AngularFireDatabase]\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, USE_EMULATOR, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}